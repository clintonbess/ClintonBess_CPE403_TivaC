/*
 * main.c
 */

#include <stdint.h>
#include <stdbool.h>
#include <math.h> // Include math funcitons
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/fpu.h" // Used for floating point
#include "driverlib/sysctl.h"

#define TARGET_IS_BLIZZARD_RB1 	//Used to access API's in ROM.
#include "driverlib/rom.h"

#ifndef M_PI
#define M_PI	3.14159265358979323846
#endif

#define SERIES_LENGTH 1000 // 1000 calulations

float gSeriesData[SERIES_LENGTH]; // Array for floating pt data

int32_t i32DataCount = 0; // Iteration counter

int main(void) {
	float fRadians; // floating pt radians

	ROM_FPULazyStackingEnable(); 	// Enable lazy stacking
	ROM_FPUEnable();			// Enable FPU

	// Using 50 MHz clock
	ROM_SysCtlClockSet(
			SYSCTL_SYSDIV_4 | SYSCTL_USE_PLL | SYSCTL_XTAL_16MHZ
					| SYSCTL_OSC_MAIN);

	fRadians = ((2 * M_PI) / SERIES_LENGTH); // Compute radians

	// Calculate 100 values
	while (i32DataCount < SERIES_LENGTH) {
		gSeriesData[i32DataCount] = cosf(fRadians * i32DataCount); // store sine wave dadta
		i32DataCount++; // go to next increment
	}

	while (1)
		;
}
